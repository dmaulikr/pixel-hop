<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_donate</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = room_width ;
y = sprite_height;
virtual_key_add((x-sprite_width)/room_width*display_get_width(),y/room_height*display_get_height(),sprite_width/room_width*display_get_width(),sprite_height/room_height*display_get_height(), vk_f2);

image_speed = 0;
//ini_open("data.ini")
//    state = ini_read_string( "game","donate", "off" );
//ini_close()

//if( state == "on" ){ image_index = 1; }

//file_delete("iap_data.json");
var map_create = false;
var ad_create = false;
product = "pixelhop_noads";
if( file_exists("iap_data.json") ){
    global.purchaseMap = ds_map_secure_load("iap_data.json");
    if ds_exists(global.purchaseMap, ds_type_map){
        if( ds_map_exists(global.purchaseMap, product) ){
            if( ds_map_find_value(global.purchaseMap, product) == 0 ){ 
                ad_create = true;
            }
        }
        else map_create = true;
    }
    else map_create = true;
}
else map_create = true;

if( map_create ){
    global.purchaseMap = ds_map_create();
    ds_map_add(global.purchaseMap, product, 0);
    ds_map_secure_save(global.purchaseMap, "iap_data.json");
    ad_create = true;
}

if( ad_create = true ){
    instance_create(0,0,obj_ads);
}

// now parse commands
productList = ds_list_create();
var pNoAds = ds_map_create();
ds_map_add(pNoAds, "id", product);
ds_map_add(pNoAds, "title", "Disable Ads");
ds_map_add(pNoAds, "type", "Durable");
ds_list_add(productList, pNoAds);
iap_activate(productList);
ds_map_destroy(pNoAds);
ds_list_destroy(productList);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="66">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var val = ds_map_find_value(iap_data, "type");
switch (val){
    case iap_ev_purchase:
        var map = ds_map_create();
        var purchase_id = ds_map_find_value(iap_data, "index");
        iap_purchase_details(purchase_id, map);
        
        if( ds_map_find_value(map, "status") == iap_purchased ){
            var product_id = ds_map_find_value(map, "product");
            ds_map_replace(global.purchaseMap, product_id, 1);
            switch(product_id){
                case product:
                    with(obj_ads){ instance_destroy(); }
                    image_index = 1;
                    break;
            }
        } 
        ds_map_destroy(map);
        break;
}
ds_map_secure_save(global.purchaseMap, "iap_data.json");

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="113">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*url_open_ext( 'https://play.google.com/', '_blank');

if( state == "off" ){
    ini_open("data.ini")
        ini_write_string("game","donate", "on" );
    ini_close();

    state = "on";
    alarm[0] = room_speed; 
}*/

if( iap_status() == iap_status_available ){
    var product = "adfree";
    if( ds_map_find_value(global.purchaseMap, product) == 0 ){
        iap_acquire(product, "");
    }
}
/*else{
    show_message_async("Store is not available.");
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>

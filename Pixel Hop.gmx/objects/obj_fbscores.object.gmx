<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
Ok we are going to use a grid to draw out high score table.
First lets create it and set the defaults.
*/

bGotResponce = false;
graphResponse = ds_map_create();        // Prepare a ds_map to receive information

    global.name_grid=ds_grid_create(1,10) //creates a grid for names
    ds_grid_set(global.name_grid,0,0,"nobody")
    ds_grid_set(global.name_grid,0,1,"nobody")
    ds_grid_set(global.name_grid,0,2,"nobody")
    ds_grid_set(global.name_grid,0,3,"nobody")
    ds_grid_set(global.name_grid,0,4,"nobody")
    ds_grid_set(global.name_grid,0,5,"nobody")
    ds_grid_set(global.name_grid,0,6,"nobody")
    ds_grid_set(global.name_grid,0,7,"nobody")
    ds_grid_set(global.name_grid,0,8,"nobody")
    ds_grid_set(global.name_grid,0,9,"nobody")
    
    global.score_grid=ds_grid_create(1,10) //creates a grid for scores
    ds_grid_set(global.score_grid,0,0,0)
    ds_grid_set(global.score_grid,0,1,0)
    ds_grid_set(global.score_grid,0,2,0)
    ds_grid_set(global.score_grid,0,3,0)
    ds_grid_set(global.score_grid,0,4,0)
    ds_grid_set(global.score_grid,0,5,0)
    ds_grid_set(global.score_grid,0,6,0)
    ds_grid_set(global.score_grid,0,7,0)
    ds_grid_set(global.score_grid,0,8,0)
    ds_grid_set(global.score_grid,0,9,0)
    
    global.name_score = ds_list_create()
    for( var i = 0; i&lt;10; i++)
        ds_list_add(global.name_score, "name");
        
    
    // create map to hold letters and numbers
    global.spr = ds_map_create();
    ds_map_add( global.spr, "spra", spra);
    ds_map_add( global.spr, "sprb", sprb);
    ds_map_add( global.spr, "sprc", sprc);
    ds_map_add( global.spr, "sprd", sprd);
    ds_map_add( global.spr, "spre", spre);
    ds_map_add( global.spr, "sprf", sprf);
    ds_map_add( global.spr, "sprg", sprg);
    ds_map_add( global.spr, "sprh", sprh);
    ds_map_add( global.spr, "spri", spri);
    ds_map_add( global.spr, "sprj", sprj);
    ds_map_add( global.spr, "sprk", sprk);
    ds_map_add( global.spr, "sprl", sprl);
    ds_map_add( global.spr, "sprm", sprm);
    ds_map_add( global.spr, "sprn", sprn);
    ds_map_add( global.spr, "spro", spro);
    ds_map_add( global.spr, "sprp", sprp);
    ds_map_add( global.spr, "sprq", sprq);
    ds_map_add( global.spr, "sprr", sprr);
    ds_map_add( global.spr, "sprs", sprs);
    ds_map_add( global.spr, "sprt", sprt);
    ds_map_add( global.spr, "spru", spru);
    ds_map_add( global.spr, "sprv", sprv);
    ds_map_add( global.spr, "sprw", sprw);
    ds_map_add( global.spr, "sprx", sprx);
    ds_map_add( global.spr, "spry", spry);
    ds_map_add( global.spr, "sprz", sprz);
    ds_map_add( global.spr, "spr0", spr0fb);
    ds_map_add( global.spr, "spr1", spr1fb);
    ds_map_add( global.spr, "spr2", spr2fb);
    ds_map_add( global.spr, "spr3", spr3fb);
    ds_map_add( global.spr, "spr4", spr4fb);
    ds_map_add( global.spr, "spr5", spr5fb);
    ds_map_add( global.spr, "spr6", spr6fb);
    ds_map_add( global.spr, "spr7", spr7fb);
    ds_map_add( global.spr, "spr8", spr8fb);
    ds_map_add( global.spr, "spr9", spr9fb);
    
    
    global.score_buttons = ds_list_create();
    ds_list_add( global.score_buttons, vk_numpad0);
    ds_list_add( global.score_buttons, vk_numpad1);
    ds_list_add( global.score_buttons, vk_numpad2);
    ds_list_add( global.score_buttons, vk_numpad3);
    ds_list_add( global.score_buttons, vk_numpad4);
    ds_list_add( global.score_buttons, vk_numpad5);
    ds_list_add( global.score_buttons, vk_numpad6);
    ds_list_add( global.score_buttons, vk_numpad7);
    ds_list_add( global.score_buttons, vk_numpad8);
    ds_list_add( global.score_buttons, vk_numpad9);
        
        
alarm[1] = room_speed / 2;
alarm[2] = room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//we looped through multiple lists, lets clean them all up

ds_grid_destroy(global.name_grid);
ds_grid_destroy(global.score_grid);

if (ds_map_exists(graphResponse, "data"))                               // Check to see if the ds_map exists
{
var dataList, dataListSize, n, friendMap, friendMap2, currentKey, currentValue;                               // Create local vars

dataList = ds_map_find_value(graphResponse, "data");                    // Get list
dataListSize = ds_list_size(dataList);                                  // Get list size

for (n = 0; n &lt; dataListSize; n += 1)                                   // Start loop
    {
    friendMap = ds_list_find_value(dataList, n);                        // Get map
        currentKey = ds_map_find_first(friendMap);                                                  // Gets the first friend key (id)
        while (ds_map_exists(friendMap, currentKey))                                                // loop through the list, getting each ds_map
            {
            currentValue = ds_map_find_value(friendMap, currentKey);                                
            if string(currentKey) == "user"
            {
                ds_map_destroy(currentValue); 
            }
            if string(currentKey) == "application"
            {
                ds_map_destroy(currentValue); 
            }

            currentKey = ds_map_find_next(friendMap, currentKey);                                   // Get the next ds_map id key
            
            }
    ds_map_destroy(friendMap);                                          // Destroy map
    }   
ds_list_destroy(dataList);                                              // Destroy list
ds_map_destroy(graphResponse);                                          // Destroy main graph map
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
with( obj_letter_fb) instance_destroy();

if( global.Auth){
    for( var i = 0; i &lt; ds_grid_height(global.name_grid); i++ ){
        var j;
        if( ds_list_find_value(global.name_score, i ) == "score" ){
            for( j = 0; j &lt; string_length( string( ds_grid_get( global.score_grid, 0, i ))); j++ ){
                var tempobj = instance_create( 8 +( j *(4 + sprite_get_width(spr0fb))), 8 +(i *(6 + sprite_get_height(spr0fb))) + (2*48), obj_letter_fb );
                tempobj.sprite_index = ds_map_find_value( global.spr, "spr" + string_char_at( string( ds_grid_get( global.score_grid, 0, i )), j+1));
            }
        } else if ( ds_list_find_value(global.name_score, i ) == "name" ){
            for( j = 0; j &lt; string_length( ds_grid_get( global.name_grid, 0, i )); j++ ){
                var tempobj = instance_create( 8 +( j *(4 + sprite_get_width(spr0fb))), 8 +(i *(6 + sprite_get_height(spr0fb))) + (2*48), obj_letter_fb );
                tempobj.sprite_index = ds_map_find_value( global.spr, "spr" + string_char_at( ds_grid_get( global.name_grid, 0, i ), j+1));
            }
        }
        
        virtual_key_add( 8/room_width*display_get_width(), 
            (8+ (i *(6 + sprite_get_height(spr0fb))) + (2*48))/room_height*display_get_height(), 
            (j *( 4 + sprite_get_width(spr0fb)))/room_width*display_get_width(), 
            sprite_get_height(spr0fb)/room_height*display_get_height(), 
            ds_list_find_value( global.score_buttons, i ) ); 
    }
}

alarm[2] = 15;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//here we send the request to facebook, we use the facebook id and not the "me"
//once we are connected stop this alarm
if global.Auth
{
facebook_graph_request(string(global.facebook_app_id) + "/scores?limit=10", "GET", -1, graphResponse);             // Request information from Facebook
alarm[0] = room_speed / 2;
alarm[1] = -1;
}
else
{
alarm[1] = room_speed / 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
Here we wait for our response and then loop though the results and add them to the grid to draw
Right now we cant pull their profile pictures because GM doesnt support jpeg, yet.
Once GM supports jpg again we can pull the id of each user and use that to pull their profile picture.
When that happens I wll update this demo to pull the profile pics.
*/

if global.Auth
{
// If we've got a response to our friends list request then display it please

if (ds_map_exists(graphResponse, "data"))                                                           // Make sure that the map exists
    {
    var dataList, dataListSize, n, namenum, scorenum,  friendMap, friendMap2, currentKey, currentValue;                             // Set up local vars
namenum = 0;
scorenum = 0;
    dataList = ds_map_find_value(graphResponse, "data");                                            // Get the "data" list from the map
    dataListSize = ds_list_size(dataList);                                                          // Get the size of the data list
bGotResponce = true;
    for (n = 0; n &lt; dataListSize; n += 1)                                                           // Loop through the list to get the names
        {
        friendMap = ds_list_find_value(dataList, n);                                                // Gets the ds_map from the list (this is the id/friend map)
        currentKey = ds_map_find_first(friendMap);                                                  // Gets the first friend key (id)
        while (ds_map_exists(friendMap, currentKey))                                                // loop through the list, getting each ds_map
            {
            currentValue = ds_map_find_value(friendMap, currentKey);                                // Get the friend that corresponds to the id
            if namenum &lt;=9
            {
            if string(currentKey) == "user"
            {
                friendMap2 = ds_map_find_value(currentValue,"name"); 
                ds_grid_set(global.name_grid,0,namenum,string(friendMap2))
                namenum = namenum + 1;
 
            }
            if string(currentKey) == "score"
            {
               ds_grid_set(global.score_grid,0,scorenum,string(currentValue))
               scorenum = scorenum + 1;
            }
            }
            
            currentKey = ds_map_find_next(friendMap, currentKey);                                   // Get the next ds_map id key
                                                                         
            }
        }
    }
}

if !bGotResponce //no responce yet, keep waiting
{
alarm[0] = room_speed / 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="105">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( ds_list_find_value( global.name_score, 9) == "score" ){ 
    
    ds_list_replace( global.name_score, 9, "name" );
} else { 
    
    ds_list_replace( global.name_score, 9, "score" );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="104">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( ds_list_find_value( global.name_score, 8) == "score" ){ 
    
    ds_list_replace( global.name_score, 8, "name" );
} else { 
    
    ds_list_replace( global.name_score, 8, "score" );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="103">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( ds_list_find_value( global.name_score, 7) == "score" ){ 
    
    ds_list_replace( global.name_score, 7, "name" );
} else { 
    
    ds_list_replace( global.name_score, 7, "score" );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="102">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( ds_list_find_value( global.name_score, 6) == "score" ){ 
    
    ds_list_replace( global.name_score, 6, "name" );
} else { 
    
    ds_list_replace( global.name_score, 6, "score" );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="101">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( ds_list_find_value( global.name_score, 5) == "score" ){ 
    
    ds_list_replace( global.name_score, 5, "name" );
} else { 
    
    ds_list_replace( global.name_score, 5, "score" );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="100">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( ds_list_find_value( global.name_score, 4) == "score" ){ 
    
    ds_list_replace( global.name_score, 4, "name" );
} else { 
    
    ds_list_replace( global.name_score, 4, "score" );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="99">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( ds_list_find_value( global.name_score, 3) == "score" ){ 
    
    ds_list_replace( global.name_score, 3, "name" );
} else { 
    
    ds_list_replace( global.name_score, 3, "score" );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="98">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( ds_list_find_value( global.name_score, 2) == "score" ){ 
    
    ds_list_replace( global.name_score, 2, "name" );
} else { 
    
    ds_list_replace( global.name_score, 2, "score" );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="97">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( ds_list_find_value( global.name_score, 1) == "score" ){ 
    
    ds_list_replace( global.name_score, 1, "name" );
} else { 
    
    ds_list_replace( global.name_score, 1, "score" );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="96">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( ds_list_find_value( global.name_score, 0) == "score" ){ 
    
    ds_list_replace( global.name_score, 0, "name" );
} else { 
    
    ds_list_replace( global.name_score, 0, "score" );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>15,31</point>
    <point>13,13</point>
  </PhysicsShapePoints>
</object>

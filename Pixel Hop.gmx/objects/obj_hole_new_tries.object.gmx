<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>depth_object</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//instance_create(0,0,obj_hole_fore);

x = room_width/2
y = room_height/2;
actual_x = x;
actual_y = y;
start_y = actual_y;

saved_sprite = sprite_index;
image_speed = 0;
image_xscale = 0;
image_yscale = 0;
//scale_vel = 0;
//scale_acc = 1/(room_speed*2)

min_yspeed = .1;
max_yspeed = 5;
//move_vel = min_yspeed;
//move_acc = (max_yspeed - min_yspeed)/power((room_speed*2),2)
time = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//actual_y += min_yspeed + power((actual_y-start_y)/100,2);
////actual_y += move_vel;
////move_vel += move_acc;
temp_val = (actual_y-start_y)/(room_height/4);
temp_val = min(temp_val, 1);
actual_y += min_yspeed + ((path_get_y(pth_depth_move, temp_val))/100 * (max_yspeed-min_yspeed));

// how fast the sprite grows
//image_xscale = .5+power((actual_y-start_y)/200,2);
//image_yscale = .5+power((actual_y-start_y)/200,2);
////image_xscale += scale_vel;
////image_yscale += scale_vel;
////scale_vel += scale_acc;
image_xscale = path_get_y(pth_depth_scale, temp_val)/100;
image_yscale = path_get_y(pth_depth_scale, temp_val)/100;

event_inherited();
time++; 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>160,51</point>
    <point>180,180</point>
  </PhysicsShapePoints>
</object>

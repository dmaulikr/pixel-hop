<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_tap_large</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = room_width * 1 / 2;
y = room_height * 3 / 4;

image_speed = 0;
image_alpha = 0;

state = "off";

spacing = sprite_width * 1 / 3;

// first time turning game on
ini_open("data.ini")
first_play = ini_read_real( "game", "tutorial", 1 );
ini_close()
looped = 0;
off_time = 0; // when to turn on in subsequent play throughs

jump_tut = instance_create( x + spacing, y, obj_jump_tut );
jump_tut.image_alpha = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// state changing scripts

if ( state = "off" and obj_player.state = "ready" and instance_number( obj_hole ) == 0 ){
    
    off_time ++;
        
    if ( first_play or off_time &gt; room_speed * 6 ){
        
        off_time = 0;
        
        state = "on";
        
        image_index = 0;
        image_speed = 1 / ( room_speed );
        
    }
    
}

else if ( state == "on" and obj_player.state = "spawning" ) {
    
    if ( first_play ) {
        
        state = "tutorial";
        
        image_index = 0;
        image_speed = 2 /  room_speed ;
        
        looped = 0;
        
    }
    
    else {
        state = "off";
    }
}

else if ( state == "tutorial" ){

    // looped the image
    if ( image_index &lt;= image_speed ){
        looped ++;
    }
    
    // move to left to allow pixel dude to fade in
    if ( first_play and x &gt; ( room_width * 1 / 2 ) - spacing ){
        x -= 1.5;
    }
    
    // make jumping pixel dude fade in
    if( first_play and jump_tut.image_alpha &lt; 1 ){
        jump_tut.image_alpha += 0.02;
    }
    
    // exit
    if ( looped == 4 ){
    
        state = "off";
        
        first_play = 0;
        
        ini_open("data.ini");
            ini_write_real( "game", "tutorial", first_play );
        ini_close();
        
    }
    
}


// fade in fade out, jump_tut fades out with object
if ( state != "off" and image_alpha &lt; 1 ) { 

    image_alpha += 0.02; 
}
else if ( state == "off" and image_alpha &gt; 0 ) {

    image_alpha -= 0.02; 
    
    if ( jump_tut.image_alpha &gt; 0 ){
        jump_tut.image_alpha -= 0.02; 
    }
}

// reposition when object is transparent
if ( image_alpha &lt;= 0 ) { 

    x = room_width * 1 / 2 ;
    
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>

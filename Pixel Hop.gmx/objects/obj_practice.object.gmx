<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_practice</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = "off";
image_speed = 0;

x = sprite_xoffset + 6;
y = 182;

virtual_key_add( ( x - sprite_width ) / room_width * display_get_width(), 
    ( y - sprite_height ) / room_height * display_get_height(),
    ( sprite_width * 2 ) / room_width * display_get_width(),
    ( sprite_height * 2 ) / room_height * display_get_height(), ord('2') );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( state == "on" ){
    // 78 always
    // 79 - 86, sometimes, 8 variance
    // good to go
    if ( obj_player.state == "running" and !collision_point( obj_player.x , obj_player.y - 78, obj_hole, false, true ) 
            and collision_line( obj_player.x , obj_player.y - 77, x , room_height, obj_hole, false, true ) ){ 
        
        image_index = 6; 
        image_speed = 0;
        
        /*
        obj_player.state = "jumping";
        obj_player.sprite_index = spr_jump;
        obj_player.image_index = 0;
        show_debug_message( string( collision_line( obj_player.x , obj_player.y - 82, x , room_height, obj_hole, false, true ).y ));
        show_debug_message( string( collision_line( obj_player.x , obj_player.y - 82, x , room_height, obj_hole, false, true ).actual_y ));
        show_debug_message( string( global.yhead_shake ));
        show_debug_message( string( obj_game_master.time % room_speed ));
        */
               
    } 
    // unknown
    else if ( obj_player.state == "running" and !collision_point( obj_player.x , obj_player.y - 86, obj_hole, false, true ) 
            and collision_line( obj_player.x , obj_player.y - 85, x , room_height, obj_hole, false, true )){ 
        
        image_index = 5; 
        image_speed = 0;
        
        
    }
    
    
    // potential for death means red
    else if ( obj_player.state == "running" and collision_line( obj_player.x, obj_player.y - 144, obj_player.x, obj_player.y, obj_hole, false, true ) ){
        image_index = 4;
    } 
    else if ( obj_player.state != "jumping" ){
    
        image_speed = 1 / 30;
        if( image_index &gt;= ( 4 - image_speed ) or image_index &lt; 1 ){
            image_index = 1;
        }
    }
    else {
        image_speed = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale = 0.9;
image_yscale = 0.9;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( obj_player.state != "running" and obj_player.state != "jumping" ){

    if( state == "off" ){
    
        state = "on";
    }
    else {
        
        state = "off";
        
        image_index = 0;
        image_speed = 0;
    }
}

image_xscale = 1.0;
image_yscale = 1.0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
